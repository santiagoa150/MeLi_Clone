// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v6.31.1
// source: apps/products/src/products.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "PRODUCTS_GRPC_PACKAGE";

export interface GetProductByIdRequest {
  id: string;
}

export interface Product {
  id: string;
  sellerId: string;
}

export const PRODUCTS_GRPC_PACKAGE_PACKAGE_NAME = "PRODUCTS_GRPC_PACKAGE";

export interface ProductServicesClient {
  getProductById(request: GetProductByIdRequest): Observable<Product>;
}

export interface ProductServicesController {
  getProductById(request: GetProductByIdRequest): Observable<Product>;
}

export function ProductServicesControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getProductById"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ProductServices", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ProductServices", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PRODUCT_SERVICES_SERVICE_NAME = "ProductServices";
