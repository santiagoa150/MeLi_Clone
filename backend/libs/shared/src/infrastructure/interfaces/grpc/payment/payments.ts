// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v6.31.1
// source: libs/shared/src/infrastructure/interfaces/grpc/payment/payments.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "PAYMENTS_GRPC_PACKAGE";

export interface GetPaymentMethodsByIdsRequest {
  ids: string[];
}

export interface GetPaymentMethodsByIdsResponse {
  paymentMethods: PaymentMethod[];
}

export interface PaymentMethod {
  id: string;
  type: string;
  brand: string;
}

export const PAYMENTS_GRPC_PACKAGE_PACKAGE_NAME = "PAYMENTS_GRPC_PACKAGE";

export interface PaymentServicesClient {
  getPaymentMethodsByIds(request: GetPaymentMethodsByIdsRequest): Observable<GetPaymentMethodsByIdsResponse>;
}

export interface PaymentServicesController {
  getPaymentMethodsByIds(request: GetPaymentMethodsByIdsRequest): Observable<GetPaymentMethodsByIdsResponse>;
}

export function PaymentServicesControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getPaymentMethodsByIds"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("PaymentServices", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("PaymentServices", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PAYMENT_SERVICES_SERVICE_NAME = "PaymentServices";
